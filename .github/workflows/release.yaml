name: release
on:
  push:
    branches:
    - test

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings -W unreachable-pub"
  RUSTUP_MAX_RETRIES: 10

jobs:
  dist-x86_64-unknown-linux-musl:
    name: dist (x86_64-unknown-linux-musl)
    runs-on: ubuntu-20.04
    env:
      RA_TARGET: x86_64-unknown-linux-musl
      RUSTFLAGS: "-C link-arg=-fuse-ld=lld -C target-feature=-crt-static"
    container:
      image: rust:alpine
      volumes:
      - /usr/local/cargo/registry

    steps:
    - name: Install dependencies
      run: apk add --no-cache git clang lld musl-dev

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Dist
      run: cargo xtask dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-x86_64-unknown-linux-musl
        path: ./dist

  dist-x86_64-unknown-linux-gnu:
    name: dist (x86_64-unknown-linux-gnu)
    runs-on: ubuntu-16.04
    env:
      RA_TARGET: x86_64-unknown-linux-gnu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rust-src

    - name: Dist
      run: cargo xtask dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-x86_64-unknown-linux-gnu
        path: ./dist

  publish:
    name: publish
    runs-on: ubuntu-16.04
    needs: ['dist-x86_64-unknown-linux-musl', 'dist-x86_64-unknown-linux-gnu']
    steps:
    - name: Install Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - run: echo "TAG=$(date --iso --utc)" >> $GITHUB_ENV
      if: github.ref == 'refs/heads/release'
    - run: echo "TAG=nightly" >> $GITHUB_ENV
      if: github.ref != 'refs/heads/release'
    - run: 'echo "TAG: $TAG"'

    - name: Checkout repository
      uses: actions/checkout@v2

    - run: echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
    - run: 'echo "HEAD_SHA: $HEAD_SHA"'

    - uses: actions/download-artifact@v1
      with:
        name: dist-x86_64-unknown-linux-gnu
        path: dist
    - uses: actions/download-artifact@v1
      with:
        name: dist-x86_64-unknown-linux-musl
        path: dist

    - name: Publish Release
      uses: ./.github/actions/github-release
      with:
        files: "dist/*"
        name: ${{ env.TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
